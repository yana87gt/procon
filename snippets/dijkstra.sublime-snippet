<snippet>
    <content><![CDATA[
typedef long long ll;
#define MAX_V 200010
#define INF 1e18
struct edge{ll cost; int to;};
typedef pair<ll,int> P;//dp[v],v
vector<edge> G[MAX_V]; 
ll dp[MAX_V];

void dijkstra(int start){
    fill(dp,dp+MAX_V,INF);
    priority_queue<P,vector<P>,greater<P>> qu;
    qu.push({dp[start]=0,start});
    while(qu.size()){
        P pr=qu.top(); qu.pop();
        int v=pr.second;
        //if(v==N-1)return;
        if(dp[v] < pr.first)continue;
        for(edge e:G[v]){
            if( dp[e.to] > dp[v]+e.cost){
                dp[e.to] = dp[v]+e.cost;
                qu.push({dp[e.to],e.to});
            }
        }
    }
}

]]></content>
    <tabTrigger>dijkstra</tabTrigger>
    <scope>source.c++</scope>
</snippet>
